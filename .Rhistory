colnames(rets) <- ("Returns")
################Current stock returns################################################
df$Date <- NULL
s0 <- matrix(df %>% slice(nrow(df)))
rownames(s0) <- colnames(data)
colnames(s0) <- ("Current Prices")
s0
source("gbm.r")
source("stock.r")
source("gbm.r")
source("stock.r")
source("AdjustedCVaRProcedure.r")
Adj_CVaR <- c()
alfa <- 0.01
nsim <- 100
for(i in c(1:nsim)){
Adjusted_CVaR <- CVaR_Function(rets, sigmas, cdcorr, s0, alfa)
Adj_CVaR <- c(Adj_CVaR, Adjusted_CVaR)
}
Final_AdjCVaR <- -mean(Adj_CVaR)*100
#######Final Results
Final_AdjCVaR
setwd("C:/Users/LorenzoFancelli/Desktop/My APP")
source("gbm.r")
source("stock.r")
source("AdjustedCVaRProcedure.r")
Adj_CVaR <- c()
alfa <- 0.01
nsim <- 100
for(i in c(1:nsim)){
Adjusted_CVaR <- CVaR_Function(rets, sigmas, cdcorr, s0, alfa)
Adj_CVaR <- c(Adj_CVaR, Adjusted_CVaR)
}
Final_AdjCVaR <- -mean(Adj_CVaR)*100
#######Final Results
Final_AdjCVaR
nsim <- 10
source("gbm.r")
source("stock.r")
source("AdjustedCVaRProcedure.r")
Adj_CVaR <- c()
alfa <- 0.01
nsim <- 10
for(i in c(1:nsim)){
Adjusted_CVaR <- CVaR_Function(rets, sigmas, cdcorr, s0, alfa)
Adj_CVaR <- c(Adj_CVaR, Adjusted_CVaR)
}
Final_AdjCVaR <- -mean(Adj_CVaR)*100
#######Final Results
Final_AdjCVaR
source("gbm.r")
source("stock.r")
source("AdjustedCVaRProcedure.r")
Adj_CVaR <- c()
alfa <- 0.01
nsim <- 10
for(i in c(1:nsim)){
Adjusted_CVaR <- CVaR_Function(rets, sigmas, cdcorr, s0, alfa)
Adj_CVaR <- c(Adj_CVaR, Adjusted_CVaR)
}
Final_AdjCVaR <- -mean(Adj_CVaR)*100
#######Final Results
Final_AdjCVaR
source("gbm.r")
source("stock.r")
source("AdjustedCVaRProcedure.r")
Adj_CVaR <- c()
alfa <- 0.05
nsim <- 10
for(i in c(1:nsim)){
Adjusted_CVaR <- CVaR_Function(rets, sigmas, cdcorr, s0, alfa)
Adj_CVaR <- c(Adj_CVaR, Adjusted_CVaR)
}
Final_AdjCVaR <- -mean(Adj_CVaR)*100
#######Final Results
Final_AdjCVaR
rnorm(10)
source("gbm.r")
source("stock.r")
source("AdjustedCVaRProcedure.r")
Adj_CVaR <- c()
alfa <- 0.1
nsim <- 1000
for(i in c(1:nsim)){
Adjusted_CVaR <- CVaR_Function(rets, sigmas, cdcorr, s0, alfa)
Adj_CVaR <- c(Adj_CVaR, Adjusted_CVaR)
}
Final_AdjCVaR <- -mean(Adj_CVaR)*100
#######Final Results
Final_AdjCVaR
paths
source("gbm.r")
source("stock.r")
source("AdjustedCVaRProcedure.r")
Adj_CVaR <- c()
alfa <- 0.1
weightseq <- c(0.2,0.2,0.2,0.2,0.2)
nsim <- 1000
for(i in c(1:nsim)){
Adjusted_CVaR <- CVaR_Function(rets, sigmas, cdcorr, s0, alfa, weightseq)
Adj_CVaR <- c(Adj_CVaR, Adjusted_CVaR)
}
Final_AdjCVaR <- -mean(Adj_CVaR)*100
#######Final Results
Final_AdjCVaR
source("gbm.r")
source("stock.r")
source("AdjustedCVaRProcedure.r")
Adj_CVaR <- c()
alfa <- 0.1
weightseq <- c(0.1,0.1,0.1,0.1,0.6)
nsim <- 100
for(i in c(1:nsim)){
Adjusted_CVaR <- CVaR_Function(rets, sigmas, cdcorr, s0, alfa, weightseq)
Adj_CVaR <- c(Adj_CVaR, Adjusted_CVaR)
}
Final_AdjCVaR <- -mean(Adj_CVaR)*100
#######Final Results
Final_AdjCVaR
source("gbm.r")
source("stock.r")
source("AdjustedCVaRProcedure.r")
Adj_CVaR <- c()
alfa <- 0.05
weightseq <- c(0.1,0.1,0.1,0.1,0.6)
nsim <- 100
for(i in c(1:nsim)){
Adjusted_CVaR <- CVaR_Function(rets, sigmas, cdcorr, s0, alfa, weightseq)
Adj_CVaR <- c(Adj_CVaR, Adjusted_CVaR)
}
Final_AdjCVaR <- -mean(Adj_CVaR)*100
#######Final Results
Final_AdjCVaR
source("gbm.r")
source("stock.r")
source("AdjustedCVaRProcedure.r")
Adj_CVaR <- c()
alfa <- 0.05
weightseq <- c(0.5,0.5,0,0,0)
nsim <- 100
for(i in c(1:nsim)){
Adjusted_CVaR <- CVaR_Function(rets, sigmas, cdcorr, s0, alfa, weightseq)
Adj_CVaR <- c(Adj_CVaR, Adjusted_CVaR)
}
Final_AdjCVaR <- -mean(Adj_CVaR)*100
#######Final Results
Final_AdjCVaR
source("gbm.r")
source("stock.r")
source("AdjustedCVaRProcedure.r")
Adj_CVaR <- c()
alfa <- 0.05
weightseq <- c(0,0,1,0,0)
nsim <- 100
for(i in c(1:nsim)){
Adjusted_CVaR <- CVaR_Function(rets, sigmas, cdcorr, s0, alfa, weightseq)
Adj_CVaR <- c(Adj_CVaR, Adjusted_CVaR)
}
Final_AdjCVaR <- -mean(Adj_CVaR)*100
#######Final Results
Final_AdjCVaR
s0
rets
rnd <- rand_bytes(10)
library(openssl)
rnd <- rand_bytes(10)
rnd
as.numeric(rnd)
rnd01 <- c()
for( i in c(1:100)){
r <- as.numeric(rand_bytes(5))
rnd01 <- rbind(rnd01, r)
}
rnd01
rnd01 <- matrix()
for( i in c(1:100)){
r <- as.numeric(rand_bytes(5))
rnd01 <- rbind(rnd01, r)
}
rnd01
rnd01 <- c()
for( i in c(1:100)){
r <- as.numeric(rand_bytes(5))
rnd01 <- rbind(rnd01, r)
}
rnd01 <- matrix(rnd01)
rnd01
rnd01 <- c()
for( i in c(1:100)){
r <- as.numeric(rand_bytes(5))
rnd01 <- rbind(rnd01, r)
}
rnd01 <- as.matrix(rnd01)
rnd01
rnd01 <- c()
for( i in c(1:100)){
r <- as.numeric(rand_bytes(5))
r <- r/sum(length(r))
rnd01 <- rbind(rnd01, r)
}
rnd01 <- as.matrix(rnd01)
rnd01
sum(rnd01)
sum(rnd01[50])
rnd01[50]
rnd01 <- c()
for( i in c(1:100)){
r <- as.numeric(rand_bytes(5))
r <- r/sum(r)
rnd01 <- rbind(rnd01, r)
}
rnd01 <- as.matrix(rnd01)
sum()
rnd01[50]
rnd01
sum(rnd01[50])
rnd01[50]
rnd01[50]
rnd01[,50]
rnd01 <- c()
for( i in c(1:100)){
r <- as.numeric(rand_bytes(5))
r <- r/sum(r)
rnd01 <- rbind(rnd01, r)
}
rnd01 <- as.matrix(rnd01)
sum(rnd01[50])
rnd01[]
library(openssl)
rnd01 <- c()
for( i in c(1:100)){
r <- as.numeric(rand_bytes(5))
r <- r/sum(r)
rnd01 <- rbind(rnd01, r)
}
rnd01 <- as.matrix(rnd01)
sum(rnd01[50])
rnd01
rnd01[,1]
rnd01[1,]
sum(rnd01[1,])
source("gbm.r")
source("stock.r")
source("AdjustedCVaRProcedure.r")
Adj_CVaR <- c()
alfa <- 0.05
weights <- c(0,0,1,0,0)
nsim <- 10
for(i in c(1:nsim)){
Adjusted_CVaR <- CVaR_Function(rets, sigmas, cdcorr, s0, alfa, weights)
Adj_CVaR <- c(Adj_CVaR, Adjusted_CVaR)
}
Final_AdjCVaR <- -mean(Adj_CVaR)*100
######Final Results
Final_AdjCVaR
source("gbm.r")
source("stock.r")
source("AdjustedCVaRProcedure.r")
source("AdjCVaRF.r")
source("randomPortfolios.r")
source("gbm.r")
source("stock.r")
source("AdjustedCVaRProcedure.r")
source("AdjCVaRF.r")
source("randomPortfolios.r")
source("gbm.r")
source("stock.r")
source("AdjustedCVaRProcedure.r")
source("AdjCVaRF.r")
source("randomPortfolios.r")
nsimul <- 10000
alfa <- 0.05
weights <- c(0,0,1,0,0)
nsim_CVaR <- 100
Final_AdjCVaR_Function(rets, sigmas, cdcorr, s0, alfa, weights, nsim_CVaR)
alfa <- 0.001
source("gbm.r")
source("stock.r")
source("AdjustedCVaRProcedure.r")
source("AdjCVaRF.r")
source("randomPortfolios.r")
nsimul <- 10000
alfa <- 0.001
weights <- c(0,0,1,0,0)
nsim_CVaR <- 1000
Final_AdjCVaR_Function(rets, sigmas, cdcorr, s0, alfa, weights, nsim_CVaR)
source("gbm.r")
source("stock.r")
source("AdjustedCVaRProcedure.r")
source("AdjCVaRF.r")
source("randomPortfolios.r")
nsimul <- 10000
alfa <- 0.001
weights <- c(0,0,1,0,0)
nsim_CVaR <- 10
Final_AdjCVaR_Function(rets, sigmas, cdcorr, s0, alfa, weights, nsim_CVaR)
rw <- RWgenerators(1000, 5)
r
rw
rw[1,]
nsimul <- 10000
alfa <- 0.001
#weights <- c(0,0,1,0,0)
nsim_CVaR <- 10
rets
sigmas
cdcorr
s0
alfa
weights
nsim_CVaR
rw <- RWgenerators(1000, 5)
ESWeights <- c()
for(i in c(1:nrow(rw))){
ES <- Final_AdjCVaR_Function(rets, sigmas, cdcorr, s0, alfa, rw[1,], nsim_CVaR)
ESWeights <- c(ESWeights, ES)
}
source("gbm.r")
source("stock.r")
source("AdjustedCVaRProcedure.r")
source("AdjCVaRF.r")
source("randomPortfolios.r")
nsimul <- 10000
alfa <- 0.001
nsim_CVaR <- 10
rw <- RWgenerators(10, 5)
ESWeights <- c()
for(i in c(1:nrow(rw))){
ES <- Final_AdjCVaR_Function(rets, sigmas, cdcorr, s0, alfa, rw[1,], nsim_CVaR)
ESWeights <- c(ESWeights, ES)
}
ESweights
ESWeights
rw
source("gbm.r")
source("stock.r")
source("AdjustedCVaRProcedure.r")
source("AdjCVaRF.r")
source("randomPortfolios.r")
alfa <- 0.05
nsim_CVaR <- 10
rw <- RWgenerators(10, 5)
ESWeights <- c()
for(i in c(1:nrow(rw))){
ES <- Final_AdjCVaR_Function(rets, sigmas, cdcorr, s0, alfa, rw[1,], nsim_CVaR)
ESWeights <- c(ESWeights, ES)
}
ESWeights
s0
s0
source("gbm.r")
source("stock.r")
source("AdjustedCVaRProcedure.r")
source("AdjCVaRF.r")
source("randomPortfolios.r")
s0
s0*rw
rw <- RWgenerators(100, 5)
alfa <- 0.05
nsim_CVaR <- 10
s0 * rw
rw
s0 * rw[1,]
s0 * as.matrix(rw)
as.matrix(s0) * rw[1,]
s0 * as.matrix(rw[1,])
as.matrix(s0) * as.matrix(rw[1,])
as.matrix(s0)
as.matrix(s0[1])
as.matrix(s0["Curret Prices"])
s0
rw
rw[1,]
s0
rw[1,]*10
s0 *10
as.numeric(s0)*10
as.numeric(s0) * rw[1,]
rets * rw[1,]
rets
source("gbm.r")
source("stock.r")
source("AdjustedCVaRProcedure.r")
source("AdjCVaRF.r")
source("randomPortfolios.r")
alfa <- 0.05
nsim_CVaR <- 10
rw <- RWgenerators(100, 5)
ESWeights <- c()
retsweights <- c()
for(i in c(1:nrow(rw))){
ES <- Final_AdjCVaR_Function(rets, sigmas, cdcorr, s0, alfa, rw[1,], nsim_CVaR)
ESWeights <- c(ESWeights, ES)
rs <- rets * rw[1,]
retsweights <- c(retsweights, rs)
}
retsweights
rets*rw[1,]
source("gbm.r")
source("stock.r")
source("AdjustedCVaRProcedure.r")
source("AdjCVaRF.r")
source("randomPortfolios.r")
alfa <- 0.05
nsim_CVaR <- 10
rw <- RWgenerators(100, 5)
ESWeights <- c()
retsweights <- c()
rets * rw[1,]
sum(rets*rw[1,])
source("gbm.r")
source("stock.r")
source("AdjustedCVaRProcedure.r")
source("AdjCVaRF.r")
source("randomPortfolios.r")
alfa <- 0.05
nsim_CVaR <- 10
rw <- RWgenerators(100, 5)
ESWeights <- c()
retsweights <- c()
for(i in c(1:nrow(rw))){
ES <- Final_AdjCVaR_Function(rets, sigmas, cdcorr, s0, alfa, rw[i,], nsim_CVaR)
ESWeights <- c(ESWeights, ES)
rs <- sum(rets * rw[i,])
retsweights <- c(retsweights, rs)
}
source("gbm.r")
source("stock.r")
source("AdjustedCVaRProcedure.r")
source("AdjCVaRF.r")
source("randomPortfolios.r")
alfa <- 0.05
nsim_CVaR <- 10
rw <- RWgenerators(100, 5)
ESWeights <- c()
retsweights <- c()
for(i in c(1:nrow(rw))){
ES <- Final_AdjCVaR_Function(rets, sigmas, cdcorr, s0, alfa, rw[i,], nsim_CVaR)
ESWeights <- c(ESWeights, ES)
rs <- sum(rets * rw[i,])
retsweights <- c(retsweights, rs)
}
retsweights
ESWeights
retsweights
ESWeights
retsweights*100
source("gbm.r")
source("stock.r")
source("AdjustedCVaRProcedure.r")
source("AdjCVaRF.r")
source("randomPortfolios.r")
alfa <- 0.05
nsim_CVaR <- 10
rw <- RWgenerators(100, 5)
ESWeights <- c()
retsweights <- c()
for(i in c(1:nrow(rw))){
ES <- Final_AdjCVaR_Function(rets, sigmas, cdcorr, s0, alfa, rw[i,], nsim_CVaR)
ESWeights <- c(ESWeights, ES)
rs <- (sum(rets * rw[i,]))*100
retsweights <- c(retsweights, rs)
}
rets
retsweights
ESWeights
plot(ESWeights, retsweights)
source("gbm.r")
source("stock.r")
source("AdjustedCVaRProcedure.r")
source("AdjCVaRF.r")
source("randomPortfolios.r")
alfa <- 0.05
nsim_CVaR <- 10
rw <- RWgenerators(1000, 5)
ESWeights <- c()
retsweights <- c()
for(i in c(1:nrow(rw))){
ES <- Final_AdjCVaR_Function(rets, sigmas, cdcorr, s0, alfa, rw[i,], nsim_CVaR)
ESWeights <- c(ESWeights, ES)
rs <- (sum(rets * rw[i,]))*100
retsweights <- c(retsweights, rs)
}
plot(ESWeights, retsweights)
min(ESWeights)
which(ESweights == min(ESWeights))
which(ESweights == min(ESweights))
min(ESWeights)
m <- min(ESWeights)
which(ESWeights == m)
rw[719,]
source("gbm.r")
source("stock.r")
source("AdjustedCVaRProcedure.r")
source("AdjCVaRF.r")
source("randomPortfolios.r")
alfa <- 0.05
nsim_CVaR <- 10
rw <- RWgenerators(10, 5)
ESWeights <- c()
retsweights <- c()
for(i in c(1:nrow(rw))){
ES <- Final_AdjCVaR_Function(rets, sigmas, cdcorr, s0, alfa, rw[i,], nsim_CVaR)
ESWeights <- c(ESWeights, ES)
rs <- (sum(rets * rw[i,]))*100
retsweights <- c(retsweights, rs)
}
m <- min(ESWeights)
pos_min <- which(ESWeights == m)
MIN_CVaR_Portfolio <- rw[pos_min, ]
plot(ESWeights, retsweights)
print(MIN_CVaR_Portfolio)
