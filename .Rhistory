mean(data)
mean(data$AAPL)
rets <- c()
for(i in colnames(data)[1:length(colnames(df))]){
m <- mean(data$i)
rets <- c(rets, m)
}
for(i in colnames(data)[1:length(colnames(df))]){
m <- mean(data[i])
rets <- c(rets, m)
}
for(i in colnames(data)[1]{
for(i in colnames(data)[1]){
m <- mean(data[i])
print(m)
}
for(i in colnames(data)[1]){
mean(data[i])
}
print(i)
for(i in colnames(data)[1]){
print(i)
}
print(mean(data[i]))
data
mean(data["AAPL"])
mean(data$AAPL)
for(i in colnames(data)[1]){
print(mean(data$AAPL))
}
df <- read.csv("Stocks1.csv")
head(df)
data <- data.frame(df["Date"])
data <- slice(data, 1:(n()-1))
for(i in colnames(df)[2:length(colnames(df))]){
v <- as.vector(unlist(df[i]))
vr <- diff(v)/(v[-length(v)])
data[i] <- vr
}
rownames(data) <- data$Date
data$Date <- NULL
head(data)
corr <- cor(data)
rets <- c()
for(i in colnames(data)[1:length(colnames(df))]){
m <- mean(data$i)
rets <- c(rets, m)
}
for(i in colnames(data)[1]){
print(mean(data$AAPL))
}
for(i in colnames(data)[1:length(colnames(df))]){
print(mean(data$i))
}
for(i in colnames(data)[1:5)]){
print(mean(data$i))
}
for(i in colnames(data)[1:5])){
print(mean(data$i))
}
for(i in colnames(data)[1:5]){
print(mean(data$i))
}
for(i in colnames(data)[1]){
print(mean(data$i))
}
for(i in colnames(data)[1]){
print(mean(data$i))
}
for(i in colnames(data)[1]){
print(mean(data[i]))
}
for(i in colnames(data)[1]){
print(data[i])
}
for(i in colnames(data)[1]){
print(data[i][1])
}
for(i in colnames(data)[1]){
print(meann(data[i][1]))
}
for(i in colnames(data)[1]){
print(mean(data[i][1]))
}
for(i in colnames(data)[1]){
print(data[i][1])
}
data["AAPL"]
mean(data["AAPL"])
for(i in colnames(data)[1]){
print(data$i)
}
df <- read.csv("Stocks1.csv")
head(df)
data <- data.frame(df["Date"])
data <- slice(data, 1:(n()-1))
for(i in colnames(df)[2:length(colnames(df))]){
v = as.vector(unlist(df[i]))
vr = diff(v)/(v[-length(v)])
data[i] <- vr
}
rownames(data) <- data$Date
data$Date <- NULL
head(data)
corr <- cor(data)
rets <- c()
for(i in colnames(data)[1]){
v <- as.vector(unlist(df[i]))
print(v)
}
mean(v)
for(i in colnames(data)[1]){
v <- as.vector(unlist(data[i]))
print(v)
}
for(i in colnames(data)[1]){
v <- as.vector(unlist(data[i]))
rets <- c(rets, mean(v))
}
rets
for(i in colnames(data)[1:length(colnames(data))]){
v <- as.vector(unlist(data[i]))
rets <- c(rets, mean(v))
}
rets
corr
class(corr)
rets <- matrix(rets)
names(rets) <- c(colnames(data))
rets
df <- read.csv("Stocks1.csv")
head(df)
data <- data.frame(df["Date"])
data <- slice(data, 1:(n()-1))
for(i in colnames(df)[2:length(colnames(df))]){
v = as.vector(unlist(df[i]))
vr = diff(v)/(v[-length(v)])
data[i] <- vr
}
rownames(data) <- data$Date
data$Date <- NULL
head(data)
corr <- cor(data)
rets <- c()
for(i in colnames(data)[1:length(colnames(data))]){
v <- as.vector(unlist(data[i]))
rets <- c(rets, mean(v))
}
rets <- matrix(rets)
rets
rownames(rets) <- colnames(data)
rets
colnames(rets) <- ("Returns")
rets
df <- read.csv("Stocks1.csv")
head(df)
data <- data.frame(df["Date"])
data <- slice(data, 1:(n()-1))
for(i in colnames(df)[2:length(colnames(df))]){
v = as.vector(unlist(df[i]))
vr = diff(v)/(v[-length(v)])
data[i] <- vr
}
rownames(data) <- data$Date
data$Date <- NULL
head(data)
corr <- cor(data)
rets <- c()
for(i in colnames(data)[1:length(colnames(data))]){
v <- as.vector(unlist(data[i]))
rets <- c(rets, mean(v))
}
rets <- matrix(rets)
rownames(rets) <- colnames(data)
colnames(rets) <- ("Returns")
rets
corr
df <- read.csv("Stocks1.csv")
head(df)
data <- data.frame(df["Date"])
data <- slice(data, 1:(n()-1))
for(i in colnames(df)[2:length(colnames(df))]){
v = as.vector(unlist(df[i]))
vr = diff(v)/(v[-length(v)])
data[i] <- vr
}
rownames(data) <- data$Date
data$Date <- NULL
head(data)
corr <- cor(data)
rets <- c()
for(i in colnames(data)[1:length(colnames(data))]){
v <- as.vector(unlist(data[i]))
rets <- c(rets, mean(v))
}
rets <- matrix(rets)
rownames(rets) <- colnames(data)
library(dplyr)
df <- read.csv("Stocks1.csv")
head(df)
data <- data.frame(df["Date"])
data <- slice(data, 1:(n()-1))
for(i in colnames(df)[2:length(colnames(df))]){
v = as.vector(unlist(df[i]))
vr = diff(v)/(v[-length(v)])
data[i] <- vr
}
rownames(data) <- data$Date
data$Date <- NULL
head(data)
corr <- cor(data)
rets <- c()
for(i in colnames(data)[1:length(colnames(data))]){
v <- as.vector(unlist(data[i]))
rets <- c(rets, mean(v))
}
rets <- matrix(rets)
rownames(rets) <- colnames(data)
colnames(rets) <- ("Returns")
rets
corr
library(dplyr)
###############Importing dataset####################################################
df <- read.csv("Stocks1.csv")
head(df)
###############Transforming Prices to returns#######################################
data <- data.frame(df["Date"])
data <- slice(data, 1:(n()-1))
for(i in colnames(df)[2:length(colnames(df))]){
v = as.vector(unlist(df[i]))
vr = diff(v)/(v[-length(v)])
data[i] <- vr
}
rownames(data) <- data$Date
data$Date <- NULL
head(data)
###############Calculating Returns and Covariance Matrix#############################
corr <- cor(data)
rets <- c()
for(i in colnames(data)[1:length(colnames(data))]){
v <- as.vector(unlist(data[i]))
rets <- c(rets, mean(v))
}
rets <- matrix(rets)
rownames(rets) <- colnames(data)
colnames(rets) <- ("Returns")
################Current stock returns################################################
s0 <- data[-1]
s0 <- data[-1]
s0
s0 <- data[nrow(data)]
s0 <- data[1]
s0
s0 <- data %>% slice(nrow(data))
s0
data
s0
nrow(data)
data %>% slice(252)
data %>% slice(253)
data %>% slice(1)
head(data,1)
tail(data,1)
data %>% slice(252)
s0 <- matrix(data %>% slice(nrow(data)))
s0
matrix(df %>% slice(nrow(df)))
matrix(df %>% slice(nrow(df)))[-1]
View(df)
library(dplyr)
###############Importing dataset####################################################
df <- read.csv("Stocks1.csv")
head(df)
###############Transforming Prices to returns#######################################
data <- data.frame(df["Date"])
data <- slice(data, 1:(n()-1))
for(i in colnames(df)[2:length(colnames(df))]){
v = as.vector(unlist(df[i]))
vr = diff(v)/(v[-length(v)])
data[i] <- vr
}
rownames(data) <- data$Date
data$Date <- NULL
head(data)
###############Calculating Returns and Covariance Matrix#############################
corr <- cor(data)
rets <- c()
for(i in colnames(data)[1:length(colnames(data))]){
v <- as.vector(unlist(data[i]))
rets <- c(rets, mean(v))
}
rets <- matrix(rets)
rownames(rets) <- colnames(data)
colnames(rets) <- ("Returns")
################Current stock returns################################################
df$Date <- NULL
s0 <- matrix(df %>% slice(nrow(df)))
rownames(s0) <- colnames(data)
colnames(s0) <- ("Current Prices")
s0
source("gbm.r")
source("stock.r")
source("gbm.r")
source("stock.r")
source("AdjustedCVaRProcedure.r")
Adj_CVaR <- c()
alfa <- 0.01
nsim <- 100
for(i in c(1:nsim)){
Adjusted_CVaR <- CVaR_Function(rets, sigmas, cdcorr, s0, alfa)
Adj_CVaR <- c(Adj_CVaR, Adjusted_CVaR)
}
Final_AdjCVaR <- -mean(Adj_CVaR)*100
#######Final Results
Final_AdjCVaR
setwd("C:/Users/LorenzoFancelli/Desktop/My APP")
source("gbm.r")
source("stock.r")
source("AdjustedCVaRProcedure.r")
Adj_CVaR <- c()
alfa <- 0.01
nsim <- 100
for(i in c(1:nsim)){
Adjusted_CVaR <- CVaR_Function(rets, sigmas, cdcorr, s0, alfa)
Adj_CVaR <- c(Adj_CVaR, Adjusted_CVaR)
}
Final_AdjCVaR <- -mean(Adj_CVaR)*100
#######Final Results
Final_AdjCVaR
nsim <- 10
source("gbm.r")
source("stock.r")
source("AdjustedCVaRProcedure.r")
Adj_CVaR <- c()
alfa <- 0.01
nsim <- 10
for(i in c(1:nsim)){
Adjusted_CVaR <- CVaR_Function(rets, sigmas, cdcorr, s0, alfa)
Adj_CVaR <- c(Adj_CVaR, Adjusted_CVaR)
}
Final_AdjCVaR <- -mean(Adj_CVaR)*100
#######Final Results
Final_AdjCVaR
source("gbm.r")
source("stock.r")
source("AdjustedCVaRProcedure.r")
Adj_CVaR <- c()
alfa <- 0.01
nsim <- 10
for(i in c(1:nsim)){
Adjusted_CVaR <- CVaR_Function(rets, sigmas, cdcorr, s0, alfa)
Adj_CVaR <- c(Adj_CVaR, Adjusted_CVaR)
}
Final_AdjCVaR <- -mean(Adj_CVaR)*100
#######Final Results
Final_AdjCVaR
source("gbm.r")
source("stock.r")
source("AdjustedCVaRProcedure.r")
Adj_CVaR <- c()
alfa <- 0.05
nsim <- 10
for(i in c(1:nsim)){
Adjusted_CVaR <- CVaR_Function(rets, sigmas, cdcorr, s0, alfa)
Adj_CVaR <- c(Adj_CVaR, Adjusted_CVaR)
}
Final_AdjCVaR <- -mean(Adj_CVaR)*100
#######Final Results
Final_AdjCVaR
rnorm(10)
source("gbm.r")
source("stock.r")
source("AdjustedCVaRProcedure.r")
Adj_CVaR <- c()
alfa <- 0.1
nsim <- 1000
for(i in c(1:nsim)){
Adjusted_CVaR <- CVaR_Function(rets, sigmas, cdcorr, s0, alfa)
Adj_CVaR <- c(Adj_CVaR, Adjusted_CVaR)
}
Final_AdjCVaR <- -mean(Adj_CVaR)*100
#######Final Results
Final_AdjCVaR
paths
source("gbm.r")
source("stock.r")
source("AdjustedCVaRProcedure.r")
Adj_CVaR <- c()
alfa <- 0.1
weightseq <- c(0.2,0.2,0.2,0.2,0.2)
nsim <- 1000
for(i in c(1:nsim)){
Adjusted_CVaR <- CVaR_Function(rets, sigmas, cdcorr, s0, alfa, weightseq)
Adj_CVaR <- c(Adj_CVaR, Adjusted_CVaR)
}
Final_AdjCVaR <- -mean(Adj_CVaR)*100
#######Final Results
Final_AdjCVaR
source("gbm.r")
source("stock.r")
source("AdjustedCVaRProcedure.r")
Adj_CVaR <- c()
alfa <- 0.1
weightseq <- c(0.1,0.1,0.1,0.1,0.6)
nsim <- 100
for(i in c(1:nsim)){
Adjusted_CVaR <- CVaR_Function(rets, sigmas, cdcorr, s0, alfa, weightseq)
Adj_CVaR <- c(Adj_CVaR, Adjusted_CVaR)
}
Final_AdjCVaR <- -mean(Adj_CVaR)*100
#######Final Results
Final_AdjCVaR
source("gbm.r")
source("stock.r")
source("AdjustedCVaRProcedure.r")
Adj_CVaR <- c()
alfa <- 0.05
weightseq <- c(0.1,0.1,0.1,0.1,0.6)
nsim <- 100
for(i in c(1:nsim)){
Adjusted_CVaR <- CVaR_Function(rets, sigmas, cdcorr, s0, alfa, weightseq)
Adj_CVaR <- c(Adj_CVaR, Adjusted_CVaR)
}
Final_AdjCVaR <- -mean(Adj_CVaR)*100
#######Final Results
Final_AdjCVaR
source("gbm.r")
source("stock.r")
source("AdjustedCVaRProcedure.r")
Adj_CVaR <- c()
alfa <- 0.05
weightseq <- c(0.5,0.5,0,0,0)
nsim <- 100
for(i in c(1:nsim)){
Adjusted_CVaR <- CVaR_Function(rets, sigmas, cdcorr, s0, alfa, weightseq)
Adj_CVaR <- c(Adj_CVaR, Adjusted_CVaR)
}
Final_AdjCVaR <- -mean(Adj_CVaR)*100
#######Final Results
Final_AdjCVaR
source("gbm.r")
source("stock.r")
source("AdjustedCVaRProcedure.r")
Adj_CVaR <- c()
alfa <- 0.05
weightseq <- c(0,0,1,0,0)
nsim <- 100
for(i in c(1:nsim)){
Adjusted_CVaR <- CVaR_Function(rets, sigmas, cdcorr, s0, alfa, weightseq)
Adj_CVaR <- c(Adj_CVaR, Adjusted_CVaR)
}
Final_AdjCVaR <- -mean(Adj_CVaR)*100
#######Final Results
Final_AdjCVaR
s0
rets
rnd <- rand_bytes(10)
library(openssl)
rnd <- rand_bytes(10)
rnd
as.numeric(rnd)
rnd01 <- c()
for( i in c(1:100)){
r <- as.numeric(rand_bytes(5))
rnd01 <- rbind(rnd01, r)
}
rnd01
rnd01 <- matrix()
for( i in c(1:100)){
r <- as.numeric(rand_bytes(5))
rnd01 <- rbind(rnd01, r)
}
rnd01
rnd01 <- c()
for( i in c(1:100)){
r <- as.numeric(rand_bytes(5))
rnd01 <- rbind(rnd01, r)
}
rnd01 <- matrix(rnd01)
rnd01
rnd01 <- c()
for( i in c(1:100)){
r <- as.numeric(rand_bytes(5))
rnd01 <- rbind(rnd01, r)
}
rnd01 <- as.matrix(rnd01)
rnd01
rnd01 <- c()
for( i in c(1:100)){
r <- as.numeric(rand_bytes(5))
r <- r/sum(length(r))
rnd01 <- rbind(rnd01, r)
}
rnd01 <- as.matrix(rnd01)
rnd01
sum(rnd01)
sum(rnd01[50])
rnd01[50]
rnd01 <- c()
for( i in c(1:100)){
r <- as.numeric(rand_bytes(5))
r <- r/sum(r)
rnd01 <- rbind(rnd01, r)
}
rnd01 <- as.matrix(rnd01)
sum()
rnd01[50]
rnd01
sum(rnd01[50])
rnd01[50]
rnd01[50]
rnd01[,50]
